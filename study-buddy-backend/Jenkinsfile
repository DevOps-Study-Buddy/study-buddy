pipeline {
    agent any

    environment {
        MYSQL_DATABASE = credentials('mysql-database-name')
        MYSQL_USER = credentials('mysql-username')
        MYSQL_PASSWORD = credentials('mysql-password')
        MYSQL_ROOT_PASSWORD = credentials('mysql-root-password')
        JWT_SECRET_KEY = credentials('jwt-secret-key')
        JWT_EXPIRATION_TIME = '3600000'
        GOOGLE_CLIENT_ID = credentials('google-client-id')
        GOOGLE_CLIENT_SECRET = credentials('google-client-secret')
        OPENAI_API_KEY = credentials('openai-api-key')
    }

    stages {
        stage('Prepare Environment') {
            steps {
                dir('study-buddy-backend') {
                    writeFile file: '.env', text: """
                        MYSQL_DATABASE=${env.MYSQL_DATABASE}
                        MYSQL_USER=${env.MYSQL_USER}
                        MYSQL_PASSWORD=${env.MYSQL_PASSWORD}
                        MYSQL_ROOT_PASSWORD=${env.MYSQL_ROOT_PASSWORD}
                        JWT_SECRET_KEY=${env.JWT_SECRET_KEY}
                        JWT_EXPIRATION_TIME=${env.JWT_EXPIRATION_TIME}
                        GOOGLE_CLIENT_ID=${env.GOOGLE_CLIENT_ID}
                        GOOGLE_CLIENT_SECRET=${env.GOOGLE_CLIENT_SECRET}
                        OPENAI_API_KEY=${env.OPENAI_API_KEY}
                    """
                }
            }
        }

        stage('Build Docker Images') {
            steps {
                dir('study-buddy-backend') {
                    sh 'docker compose build'
                }
            }
        }

        stage('Run Tests') {
            steps {
                    echo 'Running Tests'
//                 dir('study-buddy-backend') {
//                     bat 'mvn test'
//                 }
            }
        }

        stage('Start Services') {
            steps {
                  dir('study-buddy-backend') {
                      sh 'docker compose down'
                      sh 'docker compose up -d'
                  }
            }
        }
    }

post {
    success {
        mail to: 'seyiolawepo@gmail.com, tba2crt@bolton.ac.uk, fac1crt@bolton.ac.uk, sso1crt@bolton.ac.uk, R.tucker@bolton.ac.uk, as37crt@bolton.ac.uk',
             subject: "‚úÖ CI/CD Deployment Success - StudyBuddy (Production)",
             body: """\
Hello Team,

üéâ The latest deployment of *StudyBuddy* was successfully completed to **Production**.

‚úÖ Jenkins pipeline executed all stages without error.
‚úÖ Application is live and running on the Azure production instance.

üëè Well done **DevOps Team - Coholt L, Group 5** for delivering a stable deployment!

Regards,
Jenkins CI/CD Bot
"""
    }
    failure {
        mail to: 'seyiolawepo@gmail.com, tba2crt@bolton.ac.uk, fac1crt@bolton.ac.uk, sso1crt@bolton.ac.uk, R.tucker@bolton.ac.uk, as37crt@bolton.ac.uk',
             subject: "‚ùå CI/CD Deployment Failed - StudyBuddy (Production)",
             body: """\
Hello Team,

‚ö†Ô∏è The deployment of *StudyBuddy* to **Production** failed.

‚ùå One or more stages in the Jenkins pipeline encountered errors.
üìã Please check the Jenkins console output for detailed logs and investigate the root cause.

üí° Keep going, **DevOps Team - Coholt L, Group 5** ‚Äî deployment issues are part of the learning journey!

Regards,
Jenkins CI/CD Bot
"""
    }
}

}
