pipeline {
    agent any

    environment {
        MYSQL_DATABASE = credentials('mysql-database-name')
        MYSQL_USER = credentials('mysql-username')
        MYSQL_PASSWORD = credentials('mysql-password')
        MYSQL_ROOT_PASSWORD = credentials('mysql-root-password')
        JWT_SECRET_KEY = credentials('jwt-secret-key')
        JWT_EXPIRATION_TIME = '3600000'
        GOOGLE_CLIENT_ID = credentials('google-client-id')
        GOOGLE_CLIENT_SECRET = credentials('google-client-secret')
        OPENAI_API_KEY = credentials('openai-api-key')
    }

    stages {
        stage('Prepare Environment') {
            steps {
                dir('study-buddy-backend') {
                    writeFile file: '.env', text: """
                        MYSQL_DATABASE=${env.MYSQL_DATABASE}
                        MYSQL_USER=${env.MYSQL_USER}
                        MYSQL_PASSWORD=${env.MYSQL_PASSWORD}
                        MYSQL_ROOT_PASSWORD=${env.MYSQL_ROOT_PASSWORD}
                        JWT_SECRET_KEY=${env.JWT_SECRET_KEY}
                        JWT_EXPIRATION_TIME=${env.JWT_EXPIRATION_TIME}
                        GOOGLE_CLIENT_ID=${env.GOOGLE_CLIENT_ID}
                        GOOGLE_CLIENT_SECRET=${env.GOOGLE_CLIENT_SECRET}
                        OPENAI_API_KEY=${env.OPENAI_API_KEY}
                    """
                }
            }
        }

        stage('Build Docker Images') {
            steps {
                dir('study-buddy-backend') {
                    bat 'docker-compose build'
                }
            }
        }

        stage('Run Tests') {
            steps {
                dir('study-buddy-backend') {
                    bat 'mvn test'
                }
            }
        }

        stage('Start Services') {
            steps {
                dir('study-buddy-backend') {
                    bat 'docker-compose down'
                    bat 'docker-compose up -d db'
                    bat 'timeout /T 15' // ⏳ wait for MySQL to start
                    bat 'docker-compose up -d app'
                }
            }
        }
    }

    post {
        success {
            mail to: 'seyiolawepo@gmail.com',
                 subject: "✅ Deployment Success - StudyBuddy",
                 body: "The latest deployment of StudyBuddy completed successfully."
        }
        failure {
            mail to: 'seyiolawepo@gmail.com',
                 subject: "❌ Deployment Failed - StudyBuddy",
                 body: "The deployment of StudyBuddy failed. Please check Jenkins for logs."
        }
    }
}
